-- 테이블 초기화

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE USER_INFO';
EXCEPTION
    WHEN OTHERS THEN
       IF SQLCODE != -942 THEN
           RAISE;
       END IF;
END;

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE POST';
EXCEPTION
    WHEN OTHERS THEN
       IF SQLCODE != -942 THEN
           RAISE;
       END IF;
END;

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE POST_COMMENT';
EXCEPTION
    WHEN OTHERS THEN
       IF SQLCODE != -942 THEN
           RAISE;
       END IF;
END;

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ADV_INFO';
EXCEPTION
    WHEN OTHERS THEN
       IF SQLCODE != -942 THEN
           RAISE;
       END IF;
END;

-- USER_INFO 테이블 생성

CREATE TABLE USER_INFO(
     USER_ID VARCHAR2(20 CHAR) PRIMARY KEY,
     USER_PW VARCHAR2(20 CHAR) NOT NULL,
     USER_NICKNAME VARCHAR2(20 CHAR) NOT NULL,
     USER_EMAIL VARCHAR2(50 CHAR) NOT NULL,
     USER_INTRO VARCHAR2(255 CHAR),
     USER_PROFILE_NAME VARCHAR2(255 CHAR),
     USER_PROFILE_PATH VARCHAR2(255 CHAR),
     USER_ADDRESS VARCHAR2(255 CHAR),
     USER_RECEIVE_ADV VARCHAR2(1 CHAR) DEFAULT 'N',
     USER_REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     USER_REG_BY VARCHAR2(20 CHAR),
     USER_MOD_DATE TIMESTAMP,
     USER_MOD_BY VARCHAR2(20 CHAR),
     USER_RES_DATE TIMESTAMP,
     USER_RES_BY VARCHAR2(20 CHAR),
     USER_IS_DELETED VARCHAR2(1 CHAR) DEFAULT 'N'
);

-- USER_INFO 테이블 컬럼 주석 추가

COMMENT ON COLUMN USER_INFO.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN USER_INFO.USER_PW IS '사용자 비밀번호';
COMMENT ON COLUMN USER_INFO.USER_NICKNAME IS '사용자 닉네임';
COMMENT ON COLUMN USER_INFO.USER_EMAIL IS '사용자 이메일';
COMMENT ON COLUMN USER_INFO.USER_INTRO IS '사용자 소개';
COMMENT ON COLUMN USER_INFO.USER_PROFILE_NAME IS '사용자 프로필 이미지 파일명';
COMMENT ON COLUMN USER_INFO.USER_PROFILE_PATH IS '사용자 프로필 이미지 경로명';
COMMENT ON COLUMN USER_INFO.USER_ADDRESS IS '사용자 주소';
COMMENT ON COLUMN USER_INFO.USER_RECEIVE_ADV IS '광고 수신 동의 여부';
COMMENT ON COLUMN USER_INFO.USER_REG_DATE IS '사용자 등록일';
COMMENT ON COLUMN USER_INFO.USER_REG_BY IS '사용자 등록자';
COMMENT ON COLUMN USER_INFO.USER_MOD_DATE IS '사용자 수정일';
COMMENT ON COLUMN USER_INFO.USER_MOD_BY IS '사용자 수정자';
COMMENT ON COLUMN USER_INFO.USER_RES_DATE IS '사용자 삭제일';
COMMENT ON COLUMN USER_INFO.USER_RES_BY IS '사용자 삭제자';
COMMENT ON COLUMN USER_INFO.USER_IS_DELETED IS '사용자 삭제 여부';

-- USER_INFO 테이블 제약조건 추가

CREATE OR REPLACE TRIGGER TRG_USER_INFO_REG
    BEFORE INSERT ON USER_INFO
    FOR EACH ROW
BEGIN
    :NEW.USER_REG_BY := NVL(:NEW.USER_REG_BY, USER);
END;

CREATE OR REPLACE TRIGGER TRG_USER_INFO_MOD
    BEFORE UPDATE ON USER_INFO
    FOR EACH ROW
BEGIN
    :NEW.USER_MOD_DATE := SYSTIMESTAMP;
    :NEW.USER_MOD_BY := NVL(:NEW.USER_MOD_BY, USER);
END;

-- POST 테이블 생성

CREATE TABLE POST(
    POST_ID NUMBER PRIMARY KEY,
    POST_TITLE VARCHAR2(255 CHAR) NOT NULL,
    POST_CATEGORY VARCHAR2(20 CHAR) NOT NULL,
    POST_AUTHOR_ID VARCHAR2(20 CHAR) NOT NULL,
    POST_AUTHOR_NICKNAME VARCHAR2(20 CHAR) NOT NULL,
    POST_CONTENT VARCHAR2(4000 CHAR) NOT NULL,
    POST_IMAGE_NAME VARCHAR2(255 CHAR),
    POST_IMAGE_PATH VARCHAR2(255 CHAR),
    POST_VIEW_COUNT NUMBER DEFAULT 0,
    POST_VOTE_COUNT NUMBER DEFAULT 0,
    POST_REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    POST_REG_BY VARCHAR2(20 CHAR),
    POST_MOD_DATE TIMESTAMP,
    POST_MOD_BY VARCHAR2(20 CHAR),
    POST_IS_REPORTED VARCHAR2(1 CHAR) DEFAULT 'N',
    FOREIGN KEY (POST_AUTHOR_ID) REFERENCES USER_INFO(USER_ID)
);

-- POST 테이블 컬럼 주석 추가

COMMENT ON COLUMN POST.POST_ID IS '게시글 아이디';
COMMENT ON COLUMN POST.POST_TITLE IS '게시글 제목';
COMMENT ON COLUMN POST.POST_CATEGORY IS '게시글 카테고리';
COMMENT ON COLUMN POST.POST_AUTHOR_ID IS '게시글 작성자 아이디';
COMMENT ON COLUMN POST.POST_AUTHOR_NICKNAME IS '게시글 작성자 닉네임';
COMMENT ON COLUMN POST.POST_CONTENT IS '게시글 내용';
COMMENT ON COLUMN POST.POST_IMAGE_NAME IS '게시글 이미지 파일명';
COMMENT ON COLUMN POST.POST_IMAGE_PATH IS '게시글 이미지 경로명';
COMMENT ON COLUMN POST.POST_VIEW_COUNT IS '게시글 조회수';
COMMENT ON COLUMN POST.POST_VOTE_COUNT IS '게시글 추천수';
COMMENT ON COLUMN POST.POST_REG_DATE IS '게시글 등록일';
COMMENT ON COLUMN POST.POST_REG_BY IS '게시글 등록자';
COMMENT ON COLUMN POST.POST_MOD_DATE IS '게시글 수정일';
COMMENT ON COLUMN POST.POST_MOD_BY IS '게시글 수정자';
COMMENT ON COLUMN POST.POST_IS_REPORTED IS '게시글 신고 여부';

-- POST 테이블 제약조건 추가

CREATE OR REPLACE TRIGGER TRG_POST_REG
    BEFORE INSERT ON POST
    FOR EACH ROW
BEGIN
    :NEW.POST_REG_BY := NVL(:NEW.POST_REG_BY, USER);
END;

CREATE OR REPLACE TRIGGER TRG_POST_MOD
    BEFORE UPDATE ON POST
    FOR EACH ROW
BEGIN
    :NEW.POST_MOD_DATE := SYSTIMESTAMP;
    :NEW.POST_MOD_BY := NVL(:NEW.POST_MOD_BY, USER);
END;

-- POST_COMMENT 테이블 생성

CREATE TABLE POST_COMMENT(
    COMMENT_ID NUMBER PRIMARY KEY,
    COMMENT_POST_ID NUMBER NOT NULL,
    COMMENT_AUTHOR_ID VARCHAR2(20 CHAR) NOT NULL,
    COMMENT_AUTHOR_NICKNAME VARCHAR2(20 CHAR) NOT NULL,
    COMMENT_CONTENT VARCHAR2(4000 CHAR) NOT NULL,
    COMMENT_REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    COMMENT_REG_BY VARCHAR2(20 CHAR),
    COMMENT_PARENT_ID NUMBER,
    COMMENT_IS_CHILD VARCHAR2(1 CHAR) DEFAULT 'N',
    COMMENT_IS_REPORTED VARCHAR2(1 CHAR) DEFAULT 'N',
    FOREIGN KEY (COMMENT_POST_ID) REFERENCES POST(POST_ID),
    FOREIGN KEY (COMMENT_AUTHOR_ID) REFERENCES USER_INFO(USER_ID),
    FOREIGN KEY (COMMENT_PARENT_ID) REFERENCES POST_COMMENT(COMMENT_ID)
);

-- POST_COMMENT 테이블 컬럼 주석 추가

COMMENT ON COLUMN POST_COMMENT.COMMENT_ID IS '댓글 아이디';
COMMENT ON COLUMN POST_COMMENT.COMMENT_POST_ID IS '댓글이 달린 게시글 아이디';
COMMENT ON COLUMN POST_COMMENT.COMMENT_AUTHOR_ID IS '댓글 작성자 아이디';
COMMENT ON COLUMN POST_COMMENT.COMMENT_AUTHOR_NICKNAME IS '댓글 작성자 닉네임';
COMMENT ON COLUMN POST_COMMENT.COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN POST_COMMENT.COMMENT_REG_DATE IS '댓글 등록일';
COMMENT ON COLUMN POST_COMMENT.COMMENT_REG_BY IS '댓글 등록자';
COMMENT ON COLUMN POST_COMMENT.COMMENT_PARENT_ID IS '부모 댓글 아이디';
COMMENT ON COLUMN POST_COMMENT.COMMENT_IS_CHILD IS '자식 댓글 여부';
COMMENT ON COLUMN POST_COMMENT.COMMENT_IS_REPORTED IS '댓글 신고 여부';

-- POST_COMMENT 테이블 제약조건 추가

CREATE OR REPLACE TRIGGER TRG_POST_COMMENT_REG
    BEFORE INSERT ON POST_COMMENT
    FOR EACH ROW
BEGIN
    :NEW.COMMENT_REG_BY := NVL(:NEW.COMMENT_REG_BY, USER);
END;

-- ADV_INFO 테이블 생성

CREATE TABLE ADV_INFO(
    ADV_ID NUMBER PRIMARY KEY,
    ADV_CATEGORY VARCHAR2(20 CHAR) NOT NULL,
    ADV_REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ADV_REG_BY VARCHAR2(20 CHAR),
    ADV_MOD_DATE TIMESTAMP,
    ADV_MOD_BY VARCHAR2(20 CHAR),
    ADV_EXP_DATE TIMESTAMP,
    ADV_IS_VALID VARCHAR2(1 CHAR) DEFAULT 'N'
);

-- ADV_INFO 테이블 컬럼 주석 추가

COMMENT ON COLUMN ADV_INFO.ADV_ID IS '광고 아이디';
COMMENT ON COLUMN ADV_INFO.ADV_CATEGORY IS '광고 카테고리';
COMMENT ON COLUMN ADV_INFO.ADV_REG_DATE IS '광고 등록일';
COMMENT ON COLUMN ADV_INFO.ADV_REG_BY IS '광고 등록자';
COMMENT ON COLUMN ADV_INFO.ADV_MOD_DATE IS '광고 수정일';
COMMENT ON COLUMN ADV_INFO.ADV_MOD_BY IS '광고 수정자';
COMMENT ON COLUMN ADV_INFO.ADV_EXP_DATE IS '광고 만료일';
COMMENT ON COLUMN ADV_INFO.ADV_IS_VALID IS '광고 유효 여부';

-- ADV_INFO 테이블 제약조건 추가

CREATE OR REPLACE TRIGGER TRG_ADV_INFO_REG
    BEFORE INSERT ON ADV_INFO
    FOR EACH ROW
BEGIN
    :NEW.ADV_REG_BY := NVL(:NEW.ADV_REG_BY, USER);
END;

COMMIT;